{"version":3,"file":"index-f5950f37.js","sources":["../../../../../../../img/tarsier.png","../../../../components/pages/index/Disclaimer.vue","../../../../components/pages/index/Featured.vue","../../../../pages/index.vue"],"sourcesContent":["export default \"__VITE_PUBLIC_ASSET__bb9d1f4f__\"","<template>\r\n    <div class=\"mb-4 md:mb-8 lg:mb-12 relative w-10/12 md:w-4/5 lg:w-3/5 md:px-4 lg:px-8 py-2 lg:px-20 mx-auto\">\r\n        <img src=\"/img/tarsier.png\" \r\n             class=\"block absolute\r\n                    w-[56px] h-[75px] lg:w-[110px] lg:h-[150px]\r\n                    top-20 lg:top-8 -right-[36px] lg:-right-[48px]\" \r\n             alt=\"tarsier\" \r\n             id=\"imgTarsier\" />\r\n        <div class=\" text-base px-8 py-4 rounded-lg bg-trso-blue text-white z-20\">\r\n            <p class=\"mb-2\">{{ $t('pages.home.disclaimer1') }}</p>\r\n            <p class=\"mb-2\">{{ $t('pages.home.disclaimer2') }}</p>\r\n            <p class=\"mb-2\">{{ $t('pages.home.disclaimer3') }}</p>\r\n            <p>{{ $t('pages.home.disclaimer4') }}</p>\r\n        </div>\r\n    </div>\r\n</template>","<template>\r\n    <div class=\"mb-8\">\r\n        <HelpersHeading tag=\"h2\" \r\n                        tagStyle=\"featured\" \r\n                        :color=\"type === 'tv-series' ? 'yellow' : 'blue'\">\r\n            <span v-if=\"type === 'tv-series'\">{{ $t('components.featured.topSeries') }}</span>\r\n            <span v-else>{{ $t('components.featured.topMovies') }}</span>\r\n        </HelpersHeading>\r\n        <p class=\"mb-4\">\r\n            <NuxtLink :to=\"localePath({ name: 'type-pages-page', params: { type: type, page: 1 }})\"\r\n                      :class=\"textColorClass\"\r\n                      class=\"flex justify-center items-center gap-x-2 text-sm lg:text-lg\">\r\n                <span><IconsArrowRight class=\"h-5 w-5\"/></span>\r\n                <span v-if=\"type === 'tv-series'\">{{ $t('components.featured.topSeries2') }}</span>\r\n                <span v-else>{{ $t('components.featured.topMovies2') }}</span>\r\n            </NuxtLink>\r\n        </p>\r\n        <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-x-4 gap-y-4\">\r\n            <PagesItem v-for=\"item in items.data\"\r\n                    :key=\"item.id\" \r\n                    :itemData=\"item\" \r\n                    :type=\"type\" \r\n                    :lang=\"locale\" \r\n                    :color=\"type === 'tv-series' ? 'yellow' : 'blue'\" />\r\n        </div>\r\n        <NuxtLink :to=\"localePath({ name: 'type-pages-page', params: { type: type, page: 1 }})\"\r\n        :title=\"type === 'tv-series' ? $t('components.featured.topSeries2') : $t('components.featured.topMovies2')\"\r\n                  class=\"flex w-full py-2 justify-center\">\r\n            <IconsPlus class=\"h-14 w-14 transition-transform hover:rotate-180\"\r\n                       :class=\"textHoverColorClass\" />\r\n          \r\n        </NuxtLink>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\n    const { locale } = useI18n()\r\n\r\n    const localePath = useLocalePath()\r\n\r\n    const props = defineProps({\r\n        type: String\r\n    })\r\n\r\n    const textColorClass = computed(() => {\r\n\r\n        return props.type === 'tv-series' ? 'text-trso-yellow' : 'text-trso-blue'\r\n\r\n    })\r\n\r\n    const textHoverColorClass = computed(() => {\r\n\r\n        return props.type === 'tv-series' ? 'text-trso-yellow hover:text-trso-yellow2' : 'text-trso-blue hover:text-trso-blue2'\r\n\r\n    })\r\n\r\n    const runtimeConfig = useRuntimeConfig()\r\n\r\n    const limit = runtimeConfig.public.featuredItemsCount\r\n\r\n    const fields = `fields[0]=director&fields[1]=year&fields[2]=poster`\r\n    const filters = `filters[type][$eq]=${props.type === 'tv-series' ? 'series' : 'movie'}&filters[item_lang][locale][$eq]=${locale.value}&filters[item_lang][home][$eq]=true&filters[books][firstBook][$eq]=true`\r\n    const populate = `populate[item_lang][fields][0]=title&populate[item_lang][fields][1]=slug&populate[books][fields][0]=title&populate[books][fields][1]=authors&populate[books][fields][2]=thumbnail`\r\n    const pagination = `pagination[start]=0&pagination[limit]=${limit}`\r\n    const sort = `sort[0]=id%3Adesc`\r\n    const params = `${sort}&${fields}&${filters}&${populate}&${pagination}`\r\n\r\n    const url = `${runtimeConfig.public.API_BASE_URL}items?${params}`\r\n\r\n    const { data: items } = await useFetch(url)\r\n\r\n    onMounted( () => {\r\n\r\n        const itemElements = Array.from(document.getElementsByClassName('fade-in'))\r\n\r\n        const observer = new IntersectionObserver(entries => {\r\n\r\n            entries.forEach(entry => {\r\n\r\n                const intersecting = entry.isIntersecting\r\n\r\n                if (intersecting) {\r\n\r\n                    entry.target.style.opacity = '1'\r\n                    entry.target.style.transform = 'scale(1)'\r\n                    \r\n                    observer.unobserve(entry.target);\r\n                }\r\n\r\n            })\r\n        }, \r\n        { threshold: 0.5 })\r\n\r\n        itemElements.forEach(item => {\r\n\r\n            observer.observe(item)\r\n        })\r\n\r\n    })\r\n\r\n</script>","<template>\r\n    <div>\r\n        <PagesIndexDisclaimer />\r\n        <PagesIndexFeatured type=\"tv-series\"/>\r\n        <PagesIndexFeatured type=\"movies\"/>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\n    const { t } = useI18n()\r\n\r\n    const runtimeConfig = useRuntimeConfig()\r\n\r\n    useHead({\r\n        title: `${runtimeConfig.public.websiteName} - ${t('pages.home.title')}`,\r\n        meta: [\r\n            { hid: 'description', name: 'description', content: t('pages.home.hidDescription') },\r\n            { hid: 'keywords', name: 'keywords', content: t('pages.home.hidKeywords') },\r\n            { hid: 'og:site_name', property: 'og:site_name', content: runtimeConfig.public.websiteName},\r\n            { hid: 'og:description', property: 'og:description', content: t('pages.home.hidOgDescription') },\r\n            { hid: 'twitter:title', property: 'twitter:title', content: `${runtimeConfig.public.websiteName} - ${t('pages.home.hidTwitterTitle')}` },\r\n            { hid: 'twitter:description', property: 'twitter:description', content: t('pages.home.hidTwitterDescription') },\r\n        ]\r\n    })\r\n\r\n</script>"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAe,aAAA,KAAA,kBAAA,iBAAA;;;ACCN,QAAA;;;;;;;;;;;;;;;;;;ACoCT,UAAA,EAAA,OAAA,IAAA,QAAA;AAEA,UAAA,aAAA,cAAA;AAMA,UAAA,iBAAA,SAAA,MAAA;AAEA,aAAA,MAAA,SAAA,cAAA,qBAAA;AAAA,IAEA,CAAA;AAEA,UAAA,sBAAA,SAAA,MAAA;AAEA,aAAA,MAAA,SAAA,cAAA,6CAAA;AAAA,IAEA,CAAA;AAEA,UAAA,gBAAA,iBAAA;AAEA,UAAA,QAAA,cAAA,OAAA;AAEA,UAAA,SAAA;AACA,UAAA,UAAA,sBAAA,MAAA,SAAA,cAAA,WAAA,2CAAA,OAAA;AACA,UAAA,WAAA;AACA,UAAA,aAAA,yCAAA;AACA,UAAA,OAAA;AACA,UAAA,SAAA,GAAA,QAAA,UAAA,WAAA,YAAA;AAEA,UAAA,MAAA,GAAA,cAAA,OAAA,qBAAA;AAEA,UAAA,EAAA,MAAA,MAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5DA,UAAA,EAAA,EAAA,IAAA,QAAA;AAEA,UAAA,gBAAA,iBAAA;AAEA,YAAA;AAAA,MACA,OAAA,GAAA,cAAA,OAAA,iBAAA,EAAA,kBAAA;AAAA,MACA,MAAA;AAAA,QACA,EAAA,KAAA,eAAA,MAAA,eAAA,SAAA,EAAA,2BAAA,EAAA;AAAA,QACA,EAAA,KAAA,YAAA,MAAA,YAAA,SAAA,EAAA,wBAAA,EAAA;AAAA,QACA,EAAA,KAAA,gBAAA,UAAA,gBAAA,SAAA,cAAA,OAAA,YAAA;AAAA,QACA,EAAA,KAAA,kBAAA,UAAA,kBAAA,SAAA,EAAA,6BAAA,EAAA;AAAA,QACA,EAAA,KAAA,iBAAA,UAAA,iBAAA,SAAA,GAAA,cAAA,OAAA,iBAAA,EAAA,4BAAA,IAAA;AAAA,QACA,EAAA,KAAA,uBAAA,UAAA,uBAAA,SAAA,EAAA,kCAAA,EAAA;AAAA,MACA;AAAA,IACA,CAAA;;;;;;;;;;;;;;;;;;"}