{"version":3,"file":"_id_-_slug_-860b26f1.js","sources":["../../../../components/icons/Facebook.vue","../../../../components/icons/Twitter.vue","../../../../components/pages/slug/Social.vue","../../../../components/helpers/ReadMore.vue","../../../../components/pages/slug/BookDetail.vue","../../../../components/pages/slug/BooksAccordion.vue","../../../../assets/img/image-not-available.jpg","../../../../components/pages/slug/Detail.vue","../../../../pages/[type]/[id]-[slug].vue"],"sourcesContent":["<template>\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"#ffffff\" viewBox=\"0 0 50 50\">\r\n        <path d=\"M32,11h5c0.552,0,1-0.448,1-1V3.263c0-0.524-0.403-0.96-0.925-0.997C35.484,2.153,32.376,2,30.141,2C24,2,20,5.68,20,12.368V19h-7c-0.552,0-1,0.448-1,1v7c0,0.552,0.448,1,1,1h7v19c0,0.552,0.448,1,1,1h7c0.552,0,1-0.448,1-1V28h7.222c0.51,0,0.938-0.383,0.994-0.89l0.778-7C38.06,19.518,37.596,19,37,19h-8v-5C29,12.343,30.343,11,32,11z\"/>\r\n    </svg>\r\n</template>","<template>\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"#ffffff\" viewBox=\"0 0 50 50\">\r\n        <path d=\"M50.061,10.438c-1.846,0.818-3.826,1.369-5.908,1.62c2.125-1.273,3.757-3.29,4.523-5.688c-1.986,1.177-4.19,2.033-6.531,2.493c-1.874-2-4.547-3.247-7.504-3.247c-5.68,0-10.284,4.604-10.284,10.282c0,0.805,0.092,1.589,0.269,2.343C16.08,17.812,8.502,13.718,3.429,7.497c-0.885,1.522-1.391,3.289-1.391,5.172c0,3.567,1.812,6.713,4.574,8.56c-1.688-0.054-3.271-0.517-4.657-1.288c0,0.044,0,0.086,0,0.131c0,4.984,3.544,9.134,8.245,10.084c-0.86,0.236-1.769,0.36-2.707,0.36c-0.664,0-1.309-0.064-1.938-0.186c1.313,4.081,5.108,7.06,9.607,7.143c-3.517,2.757-7.951,4.399-12.77,4.399c-0.833,0-1.649-0.048-2.452-0.144c4.548,2.919,9.956,4.619,15.762,4.619c18.915,0,29.26-15.668,29.26-29.252c0-0.448-0.011-0.894-0.03-1.332C46.94,14.313,48.684,12.5,50.061,10.438z\"/>\r\n    </svg>\r\n</template>","<template>\r\n    <div class=\"share-network-list flex justify-end items-center gap-x-2 px-2 py-2\">\r\n        <ShareNetwork v-for=\"network in networks\"\r\n                     :network=\"network.network\"\r\n                     :key=\"network.network\"\r\n                     :url=\"`${runtimeConfig.public.BASE_URL}${route.fullPath}`\"\r\n                     :title=\"title\"\r\n                     :description=\"description\"\r\n                     quote=\"whesh la zone\"\r\n                     :hashtags=\"tags\"\r\n                     class=\"p-1 bg-trso-blue\"\r\n          >\r\n            <component :is=\"network.icon\" class=\"h-6 w-6\" />\r\n        </ShareNetwork>\r\n    </div>    \r\n</template>\r\n\r\n<script setup>\r\n\r\n    const props = defineProps({\r\n        title: String,\r\n        description: String,\r\n        quote: String,\r\n        hashtags: String\r\n    })\r\n\r\n    const runtimeConfig = useRuntimeConfig()\r\n\r\n    const route = useRoute()\r\n\r\n    const networks = [\r\n        { network: 'facebook', name: 'Facebook', icon: resolveComponent('IconsFacebook') },\r\n        { network: 'twitter', name: 'Twitter', icon: resolveComponent('IconsTwitter') },\r\n    ]\r\n\r\n    const tags = ref('')\r\n\r\n    onMounted(() => {\r\n\r\n        tags.value = props.hashtags?.replace(', ', ',')\r\n\r\n    })\r\n\r\n</script>","<template>\r\n    <div>\r\n        <div class=\"text-justify pb-2 text-sm lg:text-base relative transition-all duration-500 ease before:transition-all before:duration-500 before:ease\"\r\n             :class=\"style\"\r\n             :ref=\"(e) => { contentRef = e }\">\r\n            <slot></slot>\r\n        </div>\r\n        <button v-if=\"buttonVisible\"\r\n                class=\"btn block mx-auto mt-2 py-1 px-3 text-white text-sm lg:text-base font-semibold border-none\" \r\n                :class=\"`bg-trso-${color}`\"\r\n                @click=\"changeState()\">\r\n            <span v-if=\"readMoreState\">{{ $t('pages.slug.more') }}</span>\r\n            <span v-else>{{ $t('pages.slug.less') }}</span>\r\n        </button>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nconst props = defineProps({\r\n    color: String\r\n})\r\n\r\nconst cssRules = `max-h-12 overflow-hidden text-ellipsis before:opacity-1 before:bg-gradient-to-b before:from-transparent before:to-white before:content-[''] before:absolute before:w-full before:h-full before:top-0 before:left-0`\r\n\r\nconst contentRef = ref(null)\r\n\r\nconst readMoreState = ref(true)\r\n\r\nconst buttonVisible = ref(false)\r\n\r\nconst style = ref('')\r\n\r\nonMounted(() => {\r\n\r\n    const maxHeight = 48\r\n\r\n    const delta = contentRef.value.clientHeight > maxHeight\r\n\r\n    buttonVisible.value = delta\r\n\r\n    readMoreState.value = delta\r\n\r\n    style.value = delta ? cssRules : ``\r\n\r\n})\r\n\r\nfunction changeState() {\r\n\r\n    readMoreState.value = !readMoreState.value\r\n\r\n    style.value = readMoreState.value ? cssRules : `max-h-[2000px] before:opacity-0`\r\n\r\n}\r\n\r\n</script>","<template>\r\n<div class=\"mb-4 lg:flex items-center\">\r\n    <span class=\"block pb-4 lg:pb-0 pr-4 w-full lg:w-1/6\">\r\n        <nuxt-img v-if=\"book.thumbnail\"\r\n                  class=\"mx-auto lg:mx-0 lg:w-full h-auto\"\r\n                  loading=\"lazy\"\r\n                  format=\"webp\"\r\n                  :src=\"book.thumbnail\" \r\n                  :alt=\"`${$t('pages.slug.bookImgAlt')} ${book.title}`\" />\r\n    </span>\r\n    <div class=\"w-full lg:w-5/6\">\r\n        <h2 class=\"mb-4\">\r\n            <span class=\"block text-xl font-bold pb-1\">{{ book.title }}</span>\r\n            <span v-if=\"book.subtitle\" class=\"block text-sm pb-2\">({{ book.subtitle }})</span>\r\n            <span v-if=\"book.publisher || book.published\" class=\"block text-left text-xs italic block\" :class=\"`text-trso-${color}`\">\r\n                <span v-if=\"book.publisher\">{{ $t('pages.slug.published') }} {{ book.publisher }}</span>\r\n                <span v-if=\"book.published && book.published !='1000-01-01'\">\r\n                    <span v-if=\"book.publisher\"> - </span>\r\n                    {{ $formatDate(book.published, locale) }}\r\n                </span>\r\n            </span>    \r\n        </h2>\r\n        <HelpersReadMore v-if=\"book.description\" :color=\"color\">\r\n                <p itemProp=\"description\">{{ book.description }}</p>\r\n        </HelpersReadMore>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nconst props = defineProps({\r\n    book: Object,\r\n    type: String,\r\n    color: String\r\n})\r\n\r\nconst { locale } = useI18n()\r\n\r\nconst { $formatDate } = useNuxtApp()\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","<template>\r\n    <div class=\"mb-2 p-4 border\" :class=\"`border-trso-${color}`\">\r\n        <div class=\"flex flex-wrap items-center\" :class=\"contentClass\" @click.prevent=\"collapseContent\">\r\n            <img v-if=\"book.thumbnail\" \r\n                 :src=\"book.thumbnail\" \r\n                 :alt=\"`${$t('pages.slug.bookImgAlt')} ${book.title}`\" \r\n                 class=\"w-1/4 w-auto w-auto h-24\" />\r\n            <div class=\"pl-2 sm:pl-4 md:pl-8 pr-0 sm:pr-4 md:pr-8 w-3/4 md:w-auto\">\r\n                <h3 class=\"text-white text-base md:text-lg\"><span>{{ book.title }}</span></h3>\r\n                <p v-if=\"book.authors\" class=\"text-sm md:text-base\">\r\n                    <span>{{ $t('pages.slug.written') }}</span>\r\n                    <span v-for=\"(author, index) of book.authors\" :key=\"author.id\"><span v-if=\"index === Object.keys(book.authors).length - 1 && book.authors.length > 1\"> {{ $t('pages.slug.and') }}  </span>{{ author }}<span v-if=\"index < Object.keys(book.authors).length - 2\">, </span></span>\r\n                </p>\r\n                <p v-if=\"book.publisher || book.published\" class=\"text-xs md:sm\">\r\n                    <span v-if=\"book.publisher\">{{ $t('pages.slug.published') }} {{ book.publisher }}</span><span v-if=\"book.published && book.published !='1000-01-01'\"><span v-if=\"book.publisher\"> - </span>{{ $formatDate(book.published, locale) }}</span>\r\n                </p>\r\n            </div>\r\n        </div>\r\n        <HelpersReadMore :color=\"color\">\r\n            <p>{{ book.description }}</p>\r\n        </HelpersReadMore>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\ndefineProps({\r\n    book: Object,\r\n    color: String\r\n})\r\n\r\nconst { locale } = useI18n()\r\n\r\nconst { $formatDate } = useNuxtApp()\r\n\r\nconst contentClass = ref('disabled')\r\n\r\n</script>","export default \"__VITE_ASSET__b8ae60d0__\"","<template>\r\n    <div class=\"flex flex-wrap\">\r\n        <div class=\"sm:w-1/6 py-2 mx-auto lg:pr-4\">\r\n            <img v-if=\"itemAttr.poster != 'N/A'\" :src=\"itemAttr.poster\" :alt=\"`Poster ${itemLangAttr.title}`\" class=\"inline-block\" />\r\n            <img v-else src=\"~/assets/img/image-not-available.jpg\" alt=\"image not available\" class=\"inline-block\" />\r\n        </div>\r\n        <div class=\"sm:w-5/6 py-2\">\r\n            <!--<Social :movieTitle=\"movie[`movies_${$i18n.locale}`]['title']\"\r\n                    :bookTitle=\"movie[`movies_${$i18n.locale}`]['bookTitle']\" \r\n                    :bookAuthor=\"movie.authorName\"\r\n                    :url=\"url\"\r\n                    :movieType=\"movie.type\" />-->\r\n            <span class=\"block font-bold mb-2 text-center lg:text-justify\">\r\n                {{ $t('pages.slug.hidDescription1') }} {{ itemAttr.type }} {{ itemLangAttr.title }} {{ $t('pages.slug.hidDescription2') }} {{ bookAttr.title }}?\r\n            </span>\r\n            <HelpersReadMore :color=\"color\">\r\n                <p itemProp=\"description\">{{ itemLangAttr.plot }}</p>\r\n            </HelpersReadMore>\r\n            <ul class=\"py-8 text-sm lg:text-base\">\r\n                <li v-for=\"rating of itemAttr.ratings\" :key=\"rating.key\">\r\n                    <span class=\"italic pb-2\">{{ rating.Source }}:</span>&nbsp;\r\n                    <span class=\"font-semibold\" :class=\"`text-trso-${color}`\">\r\n                        {{ rating.Value }}\r\n                    </span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>  \r\n</template>\r\n\r\n<script setup>\r\n\r\nconst props = defineProps({\r\n    itemAttr: Object,\r\n    itemLangAttr: Object,\r\n    bookAttr: Object\r\n})\r\n\r\nconst color = props.itemAttr.type === 'series' ? 'yellow' : 'blue'\r\n\r\n</script>","<template>\r\n    <div>\r\n        <LayoutBreadcrumbs :levels=\"[ { name: item.attr.type === 'series' ? 'tv-series' : 'movies', route: { name: 'type-pages-page', params: { type: item.attr.type === 'series' ? 'tv-series' : 'movies', page: 1 } } }, { name: item.langAttr.title }]\"/>\r\n        <div itemscope itemtype=\"http://schema.org/Movie\">\r\n            <h1 class=\"block py-2 px-2 text-white text-center font-semibold\" :class=\"`bg-trso-${item.color}`\">{{ $t('pages.slug.what') }} <span itemprop=\"name\">{{ item.attr.type === 'series' ? $t('pages.slug.theSeries') : $t('pages.slug.theMovie') }} {{ item.langAttr.title }}</span> {{ $t('pages.slug.on') }}</h1>\r\n            <section class=\"border\" :class=\"`border-trso-${item.color}`\">\r\n                <p class=\"text-lg lg:text-xl text-center font-serif px-4 pt-4\">\r\n                    <span class=\"block pb-1 lg:pb-2 text-center\">\r\n                        <i class=\"fas fa-film\"></i>\r\n                        <span v-if=\"item.attr.type === 'series'\">{{ $t('pages.slug.theSeries') }}</span>\r\n                        <span v-else>{{ $t('pages.slug.theMovie') }}</span>\r\n                    </span>   \r\n                    <span class=\"block pb-0 lg:pb-1\" :class=\"`text-trso-${item.color}`\">\r\n                        <span class=\"text-xl sm:text-2xl md:text-3xl lg:text-4xl\">{{ item.langAttr.title }}</span>\r\n                    </span>\r\n                    <span class=\"block text-center italic text-base lg:text-lg\" v-if=\"item.attr.director || item.attr.year\">\r\n                        <span v-if=\"item.attr.director != 'N/A'\" itemprop=\"director\">{{ $t('movie.director') }} {{ item.attr.director }}</span>\r\n                        <span v-if=\"item.attr.director && item.attr.year\">{{ $t('pages.slug.and') }}</span>\r\n                        <span v-if=\"item.attr.year != ''\">{{ $t('pages.slug.released') }} {{ item.attr.year }}</span>\r\n                    </span>\r\n                    <span class=\"block pt-2 pb-1 lg:pb-2 font-bold\">\r\n                        <i class=\"fas fa-book\"></i>\r\n                        {{ $t('pages.slug.from') }}\r\n                    </span>\r\n                    <span class=\"block pb-1 lg:pb-2\" :class=\"`text-trso-${item.color}`\" itemprop=\"name\">\r\n                        <span class=\"text-xl sm:text-2xl md:text-3xl lg:text-4xl\">{{ item.firstBook.attributes.title }}</span>\r\n                    </span>\r\n                    <span class=\"block pb-2 md:pb-4 italic text-base lg:text-lg\" itemprop=\"author\" v-if=\"item.firstBook.attributes.authors\">\r\n                        <span>{{ $t('pages.slug.by') }}&nbsp;</span>\r\n                        <span v-for=\"(author, index) of item.firstBook.attributes.authors\" :key=\"author.id\">\r\n                            <span v-if=\"index === Object.keys(item.firstBook.attributes.authors).length - 1 && item.firstBook.attributes.authors.length > 1\">\r\n                                {{ $t('pages.slug.and') }} \r\n                            </span>\r\n                            {{ author }}\r\n                            <span v-if=\"index < Object.keys(item.firstBook.attributes.authors).length - 2\">, </span>\r\n                        </span>\r\n                    </span>\r\n                </p>\r\n                <!--<PagesSlugVote :imdbId=\"item.attr.imdbId\"/>-->\r\n                <PagesSlugSocial :title=\"item.langAttr.title\" \r\n                             :description=\"item.langAttr.plot\"\r\n                             quote=\"\"\r\n                             :hashtags=\"$t('pages.slug.hidKeywords')\" />\r\n            </section>\r\n            <section class=\"py-8 lg:py-12\">\r\n                <PagesSlugBookDetail :book=\"item.firstBook.attributes\" :type=\"item.attr.type\" :color=\"item.color\" />\r\n            </section>\r\n            <section v-if=\"item.books != false && item.books.length\">\r\n                <h2 class=\"text-white font-bold py-2 px-4 text-base sm:text-lg md:text-xl text-center font-serif px-4 mb-2\" \r\n                    :class=\"`bg-trso-${item.color}`\">\r\n                    {{ $t('pages.slug.relatedBooks') }}\r\n                </h2>\r\n                <div class=\"flex flex-wrap\">\r\n                    <div v-for=\"book in item.books\" :key=\"book.id\" class=\"my-2 w-full\" :id=\"`bookThumb${book.id}`\">\r\n                        <PagesSlugBooksAccordion v-if=\"book\" :book=\"book.attributes\" :color=\"item.color\" />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <PagesSlugDetail :itemAttr=\"item.attr\" :itemLangAttr=\"item.langAttr\" :bookAttr=\"item.firstBook.attributes\"/>\r\n            <PagesSlugComments :bookTitle=\"item.firstBook.attributes.title\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n    \r\n<script setup>\r\n    \r\n    const { locale, t } = useI18n()\r\n\r\n    const runtimeConfig = useRuntimeConfig()\r\n\r\n    const route = useRoute()\r\n    \r\n    const id = route.params.id\r\n   \r\n    const fields = `fields[0]=imdbId&fields[1]=poster&fields[2]=type&fields[3]=ratings`\r\n    const filters = `filters[item_lang][locale][$eq]=${locale.value}`\r\n    const populateItemLang = `populate[item_lang][fields][0]=title&populate[item_lang][fields][1]=plot&populate[item_lang][fields][2]=slug`\r\n    const populateBooks = `populate[books][fields][0]=title&populate[books][fields][1]=description&populate[books][fields][2]=thumbnail&populate[books][fields][3]=authors&populate[books][fields][4]=firstBook&populate[books][fields][5]=published&populate[books][fields][6]=publisher&populate[books][fields][7]=subtitle`\r\n    const params = `${fields}&${filters}&${populateItemLang}&${populateBooks}`\r\n    \r\n    const { data } = await useFetch(`${runtimeConfig.public.API_BASE_URL}items/${id}?${params}`)\r\n    \r\n    const item = computed( () => {\r\n\r\n        if (!data.value.data) \r\n            return null\r\n\r\n        const attr = data.value.data.attributes\r\n\r\n        const langAttr = attr.item_lang.data.attributes\r\n\r\n        const books = attr.books.data\r\n\r\n        const firstBook = books.find((book) => book.attributes.firstBook === true)\r\n\r\n        const plotSplit = langAttr.plot.split('.')\r\n\r\n        const plotForMeta = `${plotSplit[0]}.`;\r\n            \r\n        const color = attr.type === 'series' ? 'yellow' : 'blue'\r\n\r\n        return { attr, langAttr, books, firstBook, plotForMeta, color}\r\n        \r\n    })\r\n\r\n    useHead({\r\n        title: `${runtimeConfig.public.websiteName} - ${t('pages.slug.what')} ${t('pages.slug.the')} ${item.value.attr.type} ${item.value.langAttr.title} ${t('pages.slug.on')}`,\r\n        meta: [\r\n            { name: 'description', content: `${t('pages.slug.hidDescription1')} ${item.value.attr.type } ${t('pages.slug.hidDescription2')} ${item.value.firstBook.attributes.title}`},\r\n            { name: 'keywords', content: `${t('pages.slug.hidKeywords')}`},\r\n            { property: 'og:site_name', content: runtimeConfig.public.websiteName },\r\n            { property: 'og:description', content: `${t('pages.slug.the')} ${item.value.attr.type} ${item.value.langAttr.title} ${t('pages.slug.hidOgDescription')} ${item.value.firstBook.attributes.title}. ${item.plotForMeta}` },\r\n            { property: \"og:image\", content: item.value.attr.poster },\r\n            { property: 'twitter:title', content: runtimeConfig.public.websiteName },\r\n            { property: 'twitter:description', content: `${t('pages.slug.the')} ${item.value.attr.type} ${item.value.langAttr.title} ${t('pages.slug.hidOgDescription')} ${item.value.firstBook.attributes.title}. ${item.plotForMeta}` },\r\n            { property: \"twitter:image:src\", content: item.value.attr.poster },\r\n        ]\r\n    })\r\n    \r\n</script>"],"names":["_ssrRenderAttrs","_mergeProps","_withAsyncContext"],"mappings":"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"}